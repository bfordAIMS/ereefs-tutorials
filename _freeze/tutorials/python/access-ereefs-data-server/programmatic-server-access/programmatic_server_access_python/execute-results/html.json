{
  "hash": "e9e03e7d014c9112f9d62eaba88175dd",
  "result": {
    "markdown": "---\ntitle: \"Access eReefs data\"\nsubtitle: \"Programmatic server access {{< fa brands python >}}\"\n---\n\n\n:::{.tutorial-description}\nLearn how to extract eReefs data from the AIMS server for multiple dates and points with OPeNDAP in {{< fa brands python >}} python.\n:::\n\n\n::: {.cell}\n\n:::\n\n\n:::{.callout-note appearance=\"simple\"}\nThis tutorial builds on the techniques introduced in [Access eReefs data: Basic server access {{< fa brands python >}}](../basic-server-access/basic_server_access_python.qmd).\n:::\n\nIn this tutorial we will look at how to get eReefs data from the [AIMS server](http://thredds.ereefs.aims.gov.au/thredds/catalog.html) corresponding to the logged locations of tagged marine animals. Keep in mind, however, that the same methodology can be applied in any situation where we wish to extract eReefs data for a range of points with different dates of interest for each point. \n\n## Python modules\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd  # for data analysis\nimport numpy as np  # for quik maths\nfrom janitor import clean_names  # to create consitent, 'clean' variable names\nimport folium  # a python API to interactive leaflet maps\nimport datetime as dt # to time how long the data export takes\nfrom IPython.display import HTML # to render, i.e. 'display', html tables\nfrom netCDF4 import Dataset\n```\n:::\n\n\n## Motivating problem\n\nThe tracking of marine animals is commonly used by researchers to gain insights into the distribution, biology, behaviour and ecology of different species. However, knowing where an animal was at a certain point in time is only one piece of the puzzle. To start to understand *why* an animal was where it was, we usually require information on things like: What type of habitat is present at the location? What were the environmental conditions like at the time? What other lifeforms were present at the tracked location (e.g. for food or mating)?\n\nIn this tutorial we will pretend that we have tracking data for Loggerhead Sea Turtles and wish to get eReefs data corresponding to the tracked points (in time and space) to understand more about the likely environmental conditions experienced by our turtles. \n\n<details><summary>Read more: Tracking marine animals</summary>\n\nMarine animals are typically tracked using either acoustic or satellite tags. These tags are attached to the animals and transmit signals back to recievers, logging the animal's location at different points in time. In some cases other data such as depth, temperature, and animal movement profiles are recorded and the data transmitted to the recievers whenever possible. \n\nAcoustic tracking requires a network of recievers to be placed in the ocean in order to pick up the tags' transmitted signals when they come within range (typically around 500 m). Acoustic tracking has the advantage of being able transmit and recieve signals underwater, however is limited by the coverage of the reciever network. In some instances, researchers do without the reciever network and follow the animals around in a boat to receive the data. The suitability of acoustic tracking depends on the study species and research question. \n\nSatellite tracking, on the other hand, is able to track animals over virtually the entire ocean as the tags transmit signals to a network of satellites orbiting the earth. However, unlike acoustic tags, the signals cannot be transmitted through water and the tagged animals must breach the ocean surface in order to have their location logged and any other recorded data be received. The accuracy of the logged location depends on the quality of the transmitted signal. For high-quality signals, the location uncertainty can be in the hundreds of metres, however for bad quality signals this can blow out to over 10 km.\n\n</details>\n\n## Example tracking data\n\nWe will use satellite tracking data for Loggerhead Sea Turtles (*Caretta caretta*) provided in [Strydom (2022)](https://doi.org/10.15468/k4s6ap). This data contains tracking detections which span the length of the Great Barrier Reef off the east coast of Queensland Australia from December 2021 to April 2022 (shown in @fig-data-map).\n\n:::{.callout-caution appearance=\"simple\"}\nThis dataset is a summarized representation of the tracking locations per 1-degree cell. This implies a coordinate uncertainty of roughly 110 km. This level of uncertainty renders the data virtually useless for most practical applications, though it will suffice for the purposes of this tutorial. Records which are landbased as a result of the uncertainty have been removed and from here on in we will just pretend that the coordinates are accurate.\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Read in data\ndata = pd.read_csv(\"data/Loggerhead_Sea_Turtle_satellite_tracking_detections__Strydom_2022_DOI10-15468-k4s6ap.csv\")\n\n# Convert columns names from camelCase to snake_case\ndata = data.clean_names(case_type = \"snake\")\n\n# Rename some variables for easier use\ndata = data.rename(columns = {\n  \"gbif_id\": \"record_id\", \n  \"decimal_latitude\": \"latitude\", \n  \"decimal_longitude\": \"longitude\", \n  \"event_date\": \"date_time\"\n})\n\n# Ensure date_time is in the datetime data format\ndata['date_time'] = pd.to_datetime(data['date_time'])\n\n# Seperate date_time into date and time variables\ndata = data.assign(\n  date = data['date_time'].dt.strftime(\"%Y-%m-%d\"), \n  time = data['date_time'].dt.strftime(\"%H:%M\")\n)\n\n# Remove land based records (as a result of coordinate uncertainty)\nland_based_records = [4022992331, 4022992326, 4022992312, 4022992315, 4022992322, 4022992306]\ndata = data.query(\"record_id not in @land_based_records\")\n\n# Select the variables relevant to this tutorial\nselect_vars = [\"longitude\", \"latitude\", \"date\", \"time\", \"date_time\",\"record_id\", \"species\"]\ndata = data[select_vars]\n\n# View the tracking locations on an interactive map:\n# Create map centred on the mean coordinates of the tracking locations\ncentre_point = [data['latitude'].mean(), data['longitude'].mean()]\ntrack_map = folium.Map(location = centre_point, zoom_start = 4)\n\n# Add markers to map at each tracking location\nfor row in data.itertuples():\n  coords_i = [row.latitude, row.longitude]\n  marker_i = folium.Marker(location = coords_i, popup = row.date_time)\n  marker_i.add_to(track_map);\n# Note: the trailing ';' above supresses the output of the add marker function (which returns a pointer to the marker in memory)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<folium.map.Marker object at 0x0000020F4F95B670>\n<folium.map.Marker object at 0x0000020F4F95B8B0>\n<folium.map.Marker object at 0x0000020F4F95B970>\n<folium.map.Marker object at 0x0000020F4F95B520>\n<folium.map.Marker object at 0x0000020F4F9589D0>\n<folium.map.Marker object at 0x0000020F4F95B2E0>\n<folium.map.Marker object at 0x0000020F4F959B10>\n<folium.map.Marker object at 0x0000020F4F9583A0>\n<folium.map.Marker object at 0x0000020F4F9586A0>\n<folium.map.Marker object at 0x0000020F4F958130>\n<folium.map.Marker object at 0x0000020F4F959810>\n<folium.map.Marker object at 0x0000020F4F958E50>\n<folium.map.Marker object at 0x0000020F4F9585B0>\n<folium.map.Marker object at 0x0000020F4F9B5660>\n<folium.map.Marker object at 0x0000020F4F9B5900>\n<folium.map.Marker object at 0x0000020F4F9B5030>\n<folium.map.Marker object at 0x0000020F4F9B53F0>\n<folium.map.Marker object at 0x0000020F4F9B57B0>\n<folium.map.Marker object at 0x0000020F4F9B59F0>\n<folium.map.Marker object at 0x0000020F4F9B6DD0>\n<folium.map.Marker object at 0x0000020F4F9B5C60>\n<folium.map.Marker object at 0x0000020F4F9B58D0>\n<folium.map.Marker object at 0x0000020F4F9B6680>\n<folium.map.Marker object at 0x0000020F4F9B4FA0>\n<folium.map.Marker object at 0x0000020F4F9B5300>\n```\n:::\n\n```{.python .cell-code}\ntrack_map\n```\n\n::: {#fig-data-map .cell-output-display}\n```{=html}\n<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_7abf76000fa869295fe62121331090a8 {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_7abf76000fa869295fe62121331090a8&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_7abf76000fa869295fe62121331090a8 = L.map(\n                &quot;map_7abf76000fa869295fe62121331090a8&quot;,\n                {\n                    center: [-18.74, 148.42],\n                    crs: L.CRS.EPSG3857,\n                    zoom: 4,\n                    zoomControl: true,\n                    preferCanvas: false,\n                }\n            );\n\n            \n\n        \n    \n            var tile_layer_4b0726c9fab6ef784211c0361cfa8de0 = L.tileLayer(\n                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n            var marker_3f385f5de4f2838dc2d2fee7c9cf5eb6 = L.marker(\n                [-20.5, 150.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_8446511fe159e6696dd35c41cf5fde89 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_84027dee7f6d51a081ac92e8b2337136 = $(`&lt;div id=&quot;html_84027dee7f6d51a081ac92e8b2337136&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-17 17:06:32+00:00&lt;/div&gt;`)[0];\n                popup_8446511fe159e6696dd35c41cf5fde89.setContent(html_84027dee7f6d51a081ac92e8b2337136);\n            \n        \n\n        marker_3f385f5de4f2838dc2d2fee7c9cf5eb6.bindPopup(popup_8446511fe159e6696dd35c41cf5fde89)\n        ;\n\n        \n    \n    \n            var marker_8c03f5ec86badb04bdf9af3e30a032cc = L.marker(\n                [-25.5, 153.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_8ba3ed5bfd491cf9bb965c38380c05a3 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_b7fe74aed52cb6d5bf5b070ae2bdf127 = $(`&lt;div id=&quot;html_b7fe74aed52cb6d5bf5b070ae2bdf127&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-02 21:49:55+00:00&lt;/div&gt;`)[0];\n                popup_8ba3ed5bfd491cf9bb965c38380c05a3.setContent(html_b7fe74aed52cb6d5bf5b070ae2bdf127);\n            \n        \n\n        marker_8c03f5ec86badb04bdf9af3e30a032cc.bindPopup(popup_8ba3ed5bfd491cf9bb965c38380c05a3)\n        ;\n\n        \n    \n    \n            var marker_94672eb94802e039dd91566be967022d = L.marker(\n                [-24.5, 152.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_08281a47c2305b9575fd8b3f04d50dea = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_0d96a970d73b6d94a5bde3cfa9164ab0 = $(`&lt;div id=&quot;html_0d96a970d73b6d94a5bde3cfa9164ab0&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2021-12-21 17:57:22+00:00&lt;/div&gt;`)[0];\n                popup_08281a47c2305b9575fd8b3f04d50dea.setContent(html_0d96a970d73b6d94a5bde3cfa9164ab0);\n            \n        \n\n        marker_94672eb94802e039dd91566be967022d.bindPopup(popup_08281a47c2305b9575fd8b3f04d50dea)\n        ;\n\n        \n    \n    \n            var marker_5b65aeb9490efdf89e3b7989b6d615c9 = L.marker(\n                [-18.5, 147.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_0c2472e6b3c5b839e4fd33b2fecb84eb = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_dde2cfe72c741a101df0322ae0324874 = $(`&lt;div id=&quot;html_dde2cfe72c741a101df0322ae0324874&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-27 17:00:04+00:00&lt;/div&gt;`)[0];\n                popup_0c2472e6b3c5b839e4fd33b2fecb84eb.setContent(html_dde2cfe72c741a101df0322ae0324874);\n            \n        \n\n        marker_5b65aeb9490efdf89e3b7989b6d615c9.bindPopup(popup_0c2472e6b3c5b839e4fd33b2fecb84eb)\n        ;\n\n        \n    \n    \n            var marker_4ed01d53ec3a8a402690e25214c9cca9 = L.marker(\n                [-14.5, 145.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_35f88432fb6c027dcb09c749acf18856 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_6ced5b67ae189ae9fdae82732ff7c749 = $(`&lt;div id=&quot;html_6ced5b67ae189ae9fdae82732ff7c749&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-12 10:34:12+00:00&lt;/div&gt;`)[0];\n                popup_35f88432fb6c027dcb09c749acf18856.setContent(html_6ced5b67ae189ae9fdae82732ff7c749);\n            \n        \n\n        marker_4ed01d53ec3a8a402690e25214c9cca9.bindPopup(popup_35f88432fb6c027dcb09c749acf18856)\n        ;\n\n        \n    \n    \n            var marker_b9fedb1af9895b10c29b3bc870e8e220 = L.marker(\n                [-26.5, 153.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_bb4c9e6fe24fde1318b7288d9aeb2a77 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_7fc5bffbbeb7ee4acce2a9058013d6ff = $(`&lt;div id=&quot;html_7fc5bffbbeb7ee4acce2a9058013d6ff&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-12 08:59:01+00:00&lt;/div&gt;`)[0];\n                popup_bb4c9e6fe24fde1318b7288d9aeb2a77.setContent(html_7fc5bffbbeb7ee4acce2a9058013d6ff);\n            \n        \n\n        marker_b9fedb1af9895b10c29b3bc870e8e220.bindPopup(popup_bb4c9e6fe24fde1318b7288d9aeb2a77)\n        ;\n\n        \n    \n    \n            var marker_9a3e1bb7d6ea3e790a6b41d3e419869d = L.marker(\n                [-19.5, 148.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_b5d0f5765b336cf8c375cb8a2f2bac21 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_1a86c6c3b0d615aae8d4fe2fa3134494 = $(`&lt;div id=&quot;html_1a86c6c3b0d615aae8d4fe2fa3134494&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-23 07:02:18+00:00&lt;/div&gt;`)[0];\n                popup_b5d0f5765b336cf8c375cb8a2f2bac21.setContent(html_1a86c6c3b0d615aae8d4fe2fa3134494);\n            \n        \n\n        marker_9a3e1bb7d6ea3e790a6b41d3e419869d.bindPopup(popup_b5d0f5765b336cf8c375cb8a2f2bac21)\n        ;\n\n        \n    \n    \n            var marker_cf0bc62d13540d2a38483353e02a748b = L.marker(\n                [-10.5, 143.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_a1962f229cf8eee32d8d7145a8702364 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_3999a8dbb50befdb9ec43faf8ccf4f6a = $(`&lt;div id=&quot;html_3999a8dbb50befdb9ec43faf8ccf4f6a&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-04-14 06:31:48+00:00&lt;/div&gt;`)[0];\n                popup_a1962f229cf8eee32d8d7145a8702364.setContent(html_3999a8dbb50befdb9ec43faf8ccf4f6a);\n            \n        \n\n        marker_cf0bc62d13540d2a38483353e02a748b.bindPopup(popup_a1962f229cf8eee32d8d7145a8702364)\n        ;\n\n        \n    \n    \n            var marker_7c7ff238cfaa1c919b82950b9bec1cfd = L.marker(\n                [-20.5, 149.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_3895e0eef255454af3b97163a2a7c871 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_e5015503788e69f838346dea9a6f03b5 = $(`&lt;div id=&quot;html_e5015503788e69f838346dea9a6f03b5&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-19 17:44:38+00:00&lt;/div&gt;`)[0];\n                popup_3895e0eef255454af3b97163a2a7c871.setContent(html_e5015503788e69f838346dea9a6f03b5);\n            \n        \n\n        marker_7c7ff238cfaa1c919b82950b9bec1cfd.bindPopup(popup_3895e0eef255454af3b97163a2a7c871)\n        ;\n\n        \n    \n    \n            var marker_d8a09294e0f1e3874f10f1043ae16856 = L.marker(\n                [-22.5, 151.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_fc1432900bf2e45ac98716a293e2d201 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_1b630257f4f1f5e6fd8a46d99e7c3603 = $(`&lt;div id=&quot;html_1b630257f4f1f5e6fd8a46d99e7c3603&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-09 20:25:01+00:00&lt;/div&gt;`)[0];\n                popup_fc1432900bf2e45ac98716a293e2d201.setContent(html_1b630257f4f1f5e6fd8a46d99e7c3603);\n            \n        \n\n        marker_d8a09294e0f1e3874f10f1043ae16856.bindPopup(popup_fc1432900bf2e45ac98716a293e2d201)\n        ;\n\n        \n    \n    \n            var marker_282012d1ee5a98a96843830881046052 = L.marker(\n                [-21.5, 150.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_49f1cdb6bf587420d25e2f40e3284b18 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_128fb227861e760ac73ba7254d3aa7ba = $(`&lt;div id=&quot;html_128fb227861e760ac73ba7254d3aa7ba&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-14 18:26:17+00:00&lt;/div&gt;`)[0];\n                popup_49f1cdb6bf587420d25e2f40e3284b18.setContent(html_128fb227861e760ac73ba7254d3aa7ba);\n            \n        \n\n        marker_282012d1ee5a98a96843830881046052.bindPopup(popup_49f1cdb6bf587420d25e2f40e3284b18)\n        ;\n\n        \n    \n    \n            var marker_26197a6a50014f9c4e51d7025aa9cbb7 = L.marker(\n                [-11.5, 143.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_7fc2b1bc62d1c452f7c6f7eedf767760 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_4997f4af8ddd021aabb74a6a2afcda65 = $(`&lt;div id=&quot;html_4997f4af8ddd021aabb74a6a2afcda65&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-04-09 22:00:54+00:00&lt;/div&gt;`)[0];\n                popup_7fc2b1bc62d1c452f7c6f7eedf767760.setContent(html_4997f4af8ddd021aabb74a6a2afcda65);\n            \n        \n\n        marker_26197a6a50014f9c4e51d7025aa9cbb7.bindPopup(popup_7fc2b1bc62d1c452f7c6f7eedf767760)\n        ;\n\n        \n    \n    \n            var marker_efdb8dcbaaf8a5b2bc47d8ff6ba3b812 = L.marker(\n                [-19.5, 149.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_1d9dd9e782b8f7f560e1a5ed039752c1 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_e29da5901e7b7e0790c2eb2524cf0489 = $(`&lt;div id=&quot;html_e29da5901e7b7e0790c2eb2524cf0489&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-21 07:22:08+00:00&lt;/div&gt;`)[0];\n                popup_1d9dd9e782b8f7f560e1a5ed039752c1.setContent(html_e29da5901e7b7e0790c2eb2524cf0489);\n            \n        \n\n        marker_efdb8dcbaaf8a5b2bc47d8ff6ba3b812.bindPopup(popup_1d9dd9e782b8f7f560e1a5ed039752c1)\n        ;\n\n        \n    \n    \n            var marker_7189cdeb06e4f31b8d8ad59256e22d8a = L.marker(\n                [-18.5, 146.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_a62c91119b01bb54536ff9f3a6a8a1a7 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_fdcc7f1fe483bb255f7f616fd0af600b = $(`&lt;div id=&quot;html_fdcc7f1fe483bb255f7f616fd0af600b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-30 17:02:42+00:00&lt;/div&gt;`)[0];\n                popup_a62c91119b01bb54536ff9f3a6a8a1a7.setContent(html_fdcc7f1fe483bb255f7f616fd0af600b);\n            \n        \n\n        marker_7189cdeb06e4f31b8d8ad59256e22d8a.bindPopup(popup_a62c91119b01bb54536ff9f3a6a8a1a7)\n        ;\n\n        \n    \n    \n            var marker_a8b6ba083a68a333a86f68a748ade846 = L.marker(\n                [-24.5, 153.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_9d439156189207642b80e716e38544dc = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_a51759b17ab729d9bcef87130430de2e = $(`&lt;div id=&quot;html_a51759b17ab729d9bcef87130430de2e&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-03 21:37:56+00:00&lt;/div&gt;`)[0];\n                popup_9d439156189207642b80e716e38544dc.setContent(html_a51759b17ab729d9bcef87130430de2e);\n            \n        \n\n        marker_a8b6ba083a68a333a86f68a748ade846.bindPopup(popup_9d439156189207642b80e716e38544dc)\n        ;\n\n        \n    \n    \n            var marker_6c54c54063d8eae76880d9027dc5aa79 = L.marker(\n                [-15.5, 145.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_49a5f88f63d3ec1c75a3a312d32eb2fe = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_f004101761ea7215f0fbf00a1ad90dbf = $(`&lt;div id=&quot;html_f004101761ea7215f0fbf00a1ad90dbf&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-09 18:33:03+00:00&lt;/div&gt;`)[0];\n                popup_49a5f88f63d3ec1c75a3a312d32eb2fe.setContent(html_f004101761ea7215f0fbf00a1ad90dbf);\n            \n        \n\n        marker_6c54c54063d8eae76880d9027dc5aa79.bindPopup(popup_49a5f88f63d3ec1c75a3a312d32eb2fe)\n        ;\n\n        \n    \n    \n            var marker_cb521811473d6b36b3ad8af2232e86bf = L.marker(\n                [-16.5, 145.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_6b32615438ba8206d176c50fbaf296a2 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_23e6c4b7270b1e93dff6ff31701cf68a = $(`&lt;div id=&quot;html_23e6c4b7270b1e93dff6ff31701cf68a&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-07 07:15:30+00:00&lt;/div&gt;`)[0];\n                popup_6b32615438ba8206d176c50fbaf296a2.setContent(html_23e6c4b7270b1e93dff6ff31701cf68a);\n            \n        \n\n        marker_cb521811473d6b36b3ad8af2232e86bf.bindPopup(popup_6b32615438ba8206d176c50fbaf296a2)\n        ;\n\n        \n    \n    \n            var marker_bc34184c6849f8444628a196c1d0cf5a = L.marker(\n                [-13.5, 144.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_38ab2a2b6ff3a1982765d618ad0a1c28 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_f5d9f228677154bc2fc7535fe49f2ab1 = $(`&lt;div id=&quot;html_f5d9f228677154bc2fc7535fe49f2ab1&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-03-25 07:10:49+00:00&lt;/div&gt;`)[0];\n                popup_38ab2a2b6ff3a1982765d618ad0a1c28.setContent(html_f5d9f228677154bc2fc7535fe49f2ab1);\n            \n        \n\n        marker_bc34184c6849f8444628a196c1d0cf5a.bindPopup(popup_38ab2a2b6ff3a1982765d618ad0a1c28)\n        ;\n\n        \n    \n    \n            var marker_5fea52d52dc8a228c108b2a0edfd134b = L.marker(\n                [-21.5, 151.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_1c5e37933deea6d12a90c8658aea9c08 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_6be582897acf6a05526f4a4c6efef869 = $(`&lt;div id=&quot;html_6be582897acf6a05526f4a4c6efef869&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-13 06:28:09+00:00&lt;/div&gt;`)[0];\n                popup_1c5e37933deea6d12a90c8658aea9c08.setContent(html_6be582897acf6a05526f4a4c6efef869);\n            \n        \n\n        marker_5fea52d52dc8a228c108b2a0edfd134b.bindPopup(popup_1c5e37933deea6d12a90c8658aea9c08)\n        ;\n\n        \n    \n    \n            var marker_07a49b43bf01552d83933ca8971a6433 = L.marker(\n                [-12.5, 143.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_87485fb5a9852e943ee8fa4d2c2fe335 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_81521caf0fdb4da07da4217762addb5e = $(`&lt;div id=&quot;html_81521caf0fdb4da07da4217762addb5e&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-04-01 18:41:42+00:00&lt;/div&gt;`)[0];\n                popup_87485fb5a9852e943ee8fa4d2c2fe335.setContent(html_81521caf0fdb4da07da4217762addb5e);\n            \n        \n\n        marker_07a49b43bf01552d83933ca8971a6433.bindPopup(popup_87485fb5a9852e943ee8fa4d2c2fe335)\n        ;\n\n        \n    \n    \n            var marker_31d67a394c69677a215c9c3a385d889b = L.marker(\n                [-9.5, 143.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_961f789e2a006a201657d48889151c06 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_ab50f433154fc52eeb01dbe43fcc9fe3 = $(`&lt;div id=&quot;html_ab50f433154fc52eeb01dbe43fcc9fe3&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-04-21 10:30:09+00:00&lt;/div&gt;`)[0];\n                popup_961f789e2a006a201657d48889151c06.setContent(html_ab50f433154fc52eeb01dbe43fcc9fe3);\n            \n        \n\n        marker_31d67a394c69677a215c9c3a385d889b.bindPopup(popup_961f789e2a006a201657d48889151c06)\n        ;\n\n        \n    \n    \n            var marker_d569a23aee852fd173c733d607ce48c4 = L.marker(\n                [-23.5, 152.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_a7945a7a0f9e85a82f63898f6244d497 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_b3c0f41f6277cc8ffc06fb5508be7fcc = $(`&lt;div id=&quot;html_b3c0f41f6277cc8ffc06fb5508be7fcc&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-05 07:33:53+00:00&lt;/div&gt;`)[0];\n                popup_a7945a7a0f9e85a82f63898f6244d497.setContent(html_b3c0f41f6277cc8ffc06fb5508be7fcc);\n            \n        \n\n        marker_d569a23aee852fd173c733d607ce48c4.bindPopup(popup_a7945a7a0f9e85a82f63898f6244d497)\n        ;\n\n        \n    \n    \n            var marker_d1633c0b58f717915c269d69269fdd69 = L.marker(\n                [-16.5, 146.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_c874564187ba68a1c1b8e953dae616ff = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_2faf317d36cb31581b9aab5374d32056 = $(`&lt;div id=&quot;html_2faf317d36cb31581b9aab5374d32056&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-06 18:25:38+00:00&lt;/div&gt;`)[0];\n                popup_c874564187ba68a1c1b8e953dae616ff.setContent(html_2faf317d36cb31581b9aab5374d32056);\n            \n        \n\n        marker_d1633c0b58f717915c269d69269fdd69.bindPopup(popup_c874564187ba68a1c1b8e953dae616ff)\n        ;\n\n        \n    \n    \n            var marker_9b2fd29d6e6dc189e3e8857c0482e9c7 = L.marker(\n                [-23.5, 151.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_0adaff5a7817f37b2024441efe9b54f1 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_efb0761558d039723fe70bd30512a878 = $(`&lt;div id=&quot;html_efb0761558d039723fe70bd30512a878&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-01-06 05:03:23+00:00&lt;/div&gt;`)[0];\n                popup_0adaff5a7817f37b2024441efe9b54f1.setContent(html_efb0761558d039723fe70bd30512a878);\n            \n        \n\n        marker_9b2fd29d6e6dc189e3e8857c0482e9c7.bindPopup(popup_0adaff5a7817f37b2024441efe9b54f1)\n        ;\n\n        \n    \n    \n            var marker_ef8f2b05d87328d428cb4e8edf22954a = L.marker(\n                [-17.5, 146.5],\n                {}\n            ).addTo(map_7abf76000fa869295fe62121331090a8);\n        \n    \n        var popup_05fd1beb193372c95dc82fa50ce53653 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n\n        \n            \n                var html_67ae30afb71f889dc9e68ebbff36d462 = $(`&lt;div id=&quot;html_67ae30afb71f889dc9e68ebbff36d462&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;2022-02-02 09:14:56+00:00&lt;/div&gt;`)[0];\n                popup_05fd1beb193372c95dc82fa50ce53653.setContent(html_67ae30afb71f889dc9e68ebbff36d462);\n            \n        \n\n        marker_ef8f2b05d87328d428cb4e8edf22954a.bindPopup(popup_05fd1beb193372c95dc82fa50ce53653)\n        ;\n\n        \n    \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>\n```\n\n\nLoggerhead Sea Turtle satellite tracking records (December 2021 - April 2022)\n:::\n:::\n\n\n\n## Extracting data from the server\n\nIn the preceeding tutorial [Accessing eReefs data from the AIMS server](../basic-server-access/basic_server_access_python.qmd) we introduced the process of extracting eReefs data from the [AIMS server](http://thredds.ereefs.aims.gov.au/thredds/catalog.html). We will now extend this methodology to extract data for a set of points and dates. \n\nIn @tbl-detections below we see the set of coordinates and dates for which we wish to get the eReefs data. \n\n:::{.callout-note appearance=\"simple\"}\nThe AIMS eReefs server only contains aggregated data. That is daily, monthly, or yearly aggregations of the hourly eReefs raw model output. We will use the daily aggregated data for this tutorial, however the same techniques could be applied to access the raw model data from the [National Computational Infrastructure (NCI) server](https://dapds00.nci.org.au/thredds/catalogs/fx3/catalog.html).\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code  code-fold=\"true\" code-summary=\"Show code to produce table\"}\n# Create table of tracking detections\ntbl = data.sort_values('date_time') # sort by date_time\ntbl = tbl[['date', 'time', 'longitude', 'latitude']] # select variables\n\n# Output table in html format (hide row nums; format coordinates to their precision of 1 decimal place)\ntbl = tbl.style.hide(axis = 'index').format(precision=1)\n```\n:::\n\n::: {#tbl-detections .cell tbl-cap='Loggerhead Sea Turtle detections (Strydom, 2022)' class='scroll_box_y'}\n::: {.cell-output-display}\n```{=html}\n<style type=\"text/css\">\n</style>\n<table id=\"T_2fea0\">\n  <thead>\n    <tr>\n      <th id=\"T_2fea0_level0_col0\" class=\"col_heading level0 col0\" >date</th>\n      <th id=\"T_2fea0_level0_col1\" class=\"col_heading level0 col1\" >time</th>\n      <th id=\"T_2fea0_level0_col2\" class=\"col_heading level0 col2\" >longitude</th>\n      <th id=\"T_2fea0_level0_col3\" class=\"col_heading level0 col3\" >latitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_2fea0_row0_col0\" class=\"data row0 col0\" >2021-12-21</td>\n      <td id=\"T_2fea0_row0_col1\" class=\"data row0 col1\" >17:57</td>\n      <td id=\"T_2fea0_row0_col2\" class=\"data row0 col2\" >152.5</td>\n      <td id=\"T_2fea0_row0_col3\" class=\"data row0 col3\" >-24.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row1_col0\" class=\"data row1 col0\" >2022-01-02</td>\n      <td id=\"T_2fea0_row1_col1\" class=\"data row1 col1\" >21:49</td>\n      <td id=\"T_2fea0_row1_col2\" class=\"data row1 col2\" >153.5</td>\n      <td id=\"T_2fea0_row1_col3\" class=\"data row1 col3\" >-25.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row2_col0\" class=\"data row2 col0\" >2022-01-05</td>\n      <td id=\"T_2fea0_row2_col1\" class=\"data row2 col1\" >07:33</td>\n      <td id=\"T_2fea0_row2_col2\" class=\"data row2 col2\" >152.5</td>\n      <td id=\"T_2fea0_row2_col3\" class=\"data row2 col3\" >-23.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row3_col0\" class=\"data row3 col0\" >2022-01-06</td>\n      <td id=\"T_2fea0_row3_col1\" class=\"data row3 col1\" >05:03</td>\n      <td id=\"T_2fea0_row3_col2\" class=\"data row3 col2\" >151.5</td>\n      <td id=\"T_2fea0_row3_col3\" class=\"data row3 col3\" >-23.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row4_col0\" class=\"data row4 col0\" >2022-01-09</td>\n      <td id=\"T_2fea0_row4_col1\" class=\"data row4 col1\" >20:25</td>\n      <td id=\"T_2fea0_row4_col2\" class=\"data row4 col2\" >151.5</td>\n      <td id=\"T_2fea0_row4_col3\" class=\"data row4 col3\" >-22.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row5_col0\" class=\"data row5 col0\" >2022-01-13</td>\n      <td id=\"T_2fea0_row5_col1\" class=\"data row5 col1\" >06:28</td>\n      <td id=\"T_2fea0_row5_col2\" class=\"data row5 col2\" >151.5</td>\n      <td id=\"T_2fea0_row5_col3\" class=\"data row5 col3\" >-21.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row6_col0\" class=\"data row6 col0\" >2022-01-14</td>\n      <td id=\"T_2fea0_row6_col1\" class=\"data row6 col1\" >18:26</td>\n      <td id=\"T_2fea0_row6_col2\" class=\"data row6 col2\" >150.5</td>\n      <td id=\"T_2fea0_row6_col3\" class=\"data row6 col3\" >-21.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row7_col0\" class=\"data row7 col0\" >2022-01-17</td>\n      <td id=\"T_2fea0_row7_col1\" class=\"data row7 col1\" >17:06</td>\n      <td id=\"T_2fea0_row7_col2\" class=\"data row7 col2\" >150.5</td>\n      <td id=\"T_2fea0_row7_col3\" class=\"data row7 col3\" >-20.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row8_col0\" class=\"data row8 col0\" >2022-01-19</td>\n      <td id=\"T_2fea0_row8_col1\" class=\"data row8 col1\" >17:44</td>\n      <td id=\"T_2fea0_row8_col2\" class=\"data row8 col2\" >149.5</td>\n      <td id=\"T_2fea0_row8_col3\" class=\"data row8 col3\" >-20.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row9_col0\" class=\"data row9 col0\" >2022-01-21</td>\n      <td id=\"T_2fea0_row9_col1\" class=\"data row9 col1\" >07:22</td>\n      <td id=\"T_2fea0_row9_col2\" class=\"data row9 col2\" >149.5</td>\n      <td id=\"T_2fea0_row9_col3\" class=\"data row9 col3\" >-19.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row10_col0\" class=\"data row10 col0\" >2022-01-23</td>\n      <td id=\"T_2fea0_row10_col1\" class=\"data row10 col1\" >07:02</td>\n      <td id=\"T_2fea0_row10_col2\" class=\"data row10 col2\" >148.5</td>\n      <td id=\"T_2fea0_row10_col3\" class=\"data row10 col3\" >-19.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row11_col0\" class=\"data row11 col0\" >2022-01-27</td>\n      <td id=\"T_2fea0_row11_col1\" class=\"data row11 col1\" >17:00</td>\n      <td id=\"T_2fea0_row11_col2\" class=\"data row11 col2\" >147.5</td>\n      <td id=\"T_2fea0_row11_col3\" class=\"data row11 col3\" >-18.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row12_col0\" class=\"data row12 col0\" >2022-01-30</td>\n      <td id=\"T_2fea0_row12_col1\" class=\"data row12 col1\" >17:02</td>\n      <td id=\"T_2fea0_row12_col2\" class=\"data row12 col2\" >146.5</td>\n      <td id=\"T_2fea0_row12_col3\" class=\"data row12 col3\" >-18.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row13_col0\" class=\"data row13 col0\" >2022-02-02</td>\n      <td id=\"T_2fea0_row13_col1\" class=\"data row13 col1\" >09:14</td>\n      <td id=\"T_2fea0_row13_col2\" class=\"data row13 col2\" >146.5</td>\n      <td id=\"T_2fea0_row13_col3\" class=\"data row13 col3\" >-17.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row14_col0\" class=\"data row14 col0\" >2022-02-03</td>\n      <td id=\"T_2fea0_row14_col1\" class=\"data row14 col1\" >21:37</td>\n      <td id=\"T_2fea0_row14_col2\" class=\"data row14 col2\" >153.5</td>\n      <td id=\"T_2fea0_row14_col3\" class=\"data row14 col3\" >-24.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row15_col0\" class=\"data row15 col0\" >2022-02-06</td>\n      <td id=\"T_2fea0_row15_col1\" class=\"data row15 col1\" >18:25</td>\n      <td id=\"T_2fea0_row15_col2\" class=\"data row15 col2\" >146.5</td>\n      <td id=\"T_2fea0_row15_col3\" class=\"data row15 col3\" >-16.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row16_col0\" class=\"data row16 col0\" >2022-02-07</td>\n      <td id=\"T_2fea0_row16_col1\" class=\"data row16 col1\" >07:15</td>\n      <td id=\"T_2fea0_row16_col2\" class=\"data row16 col2\" >145.5</td>\n      <td id=\"T_2fea0_row16_col3\" class=\"data row16 col3\" >-16.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row17_col0\" class=\"data row17 col0\" >2022-02-09</td>\n      <td id=\"T_2fea0_row17_col1\" class=\"data row17 col1\" >18:33</td>\n      <td id=\"T_2fea0_row17_col2\" class=\"data row17 col2\" >145.5</td>\n      <td id=\"T_2fea0_row17_col3\" class=\"data row17 col3\" >-15.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row18_col0\" class=\"data row18 col0\" >2022-02-12</td>\n      <td id=\"T_2fea0_row18_col1\" class=\"data row18 col1\" >08:59</td>\n      <td id=\"T_2fea0_row18_col2\" class=\"data row18 col2\" >153.5</td>\n      <td id=\"T_2fea0_row18_col3\" class=\"data row18 col3\" >-26.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row19_col0\" class=\"data row19 col0\" >2022-02-12</td>\n      <td id=\"T_2fea0_row19_col1\" class=\"data row19 col1\" >10:34</td>\n      <td id=\"T_2fea0_row19_col2\" class=\"data row19 col2\" >145.5</td>\n      <td id=\"T_2fea0_row19_col3\" class=\"data row19 col3\" >-14.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row20_col0\" class=\"data row20 col0\" >2022-03-25</td>\n      <td id=\"T_2fea0_row20_col1\" class=\"data row20 col1\" >07:10</td>\n      <td id=\"T_2fea0_row20_col2\" class=\"data row20 col2\" >144.5</td>\n      <td id=\"T_2fea0_row20_col3\" class=\"data row20 col3\" >-13.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row21_col0\" class=\"data row21 col0\" >2022-04-01</td>\n      <td id=\"T_2fea0_row21_col1\" class=\"data row21 col1\" >18:41</td>\n      <td id=\"T_2fea0_row21_col2\" class=\"data row21 col2\" >143.5</td>\n      <td id=\"T_2fea0_row21_col3\" class=\"data row21 col3\" >-12.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row22_col0\" class=\"data row22 col0\" >2022-04-09</td>\n      <td id=\"T_2fea0_row22_col1\" class=\"data row22 col1\" >22:00</td>\n      <td id=\"T_2fea0_row22_col2\" class=\"data row22 col2\" >143.5</td>\n      <td id=\"T_2fea0_row22_col3\" class=\"data row22 col3\" >-11.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row23_col0\" class=\"data row23 col0\" >2022-04-14</td>\n      <td id=\"T_2fea0_row23_col1\" class=\"data row23 col1\" >06:31</td>\n      <td id=\"T_2fea0_row23_col2\" class=\"data row23 col2\" >143.5</td>\n      <td id=\"T_2fea0_row23_col3\" class=\"data row23 col3\" >-10.5</td>\n    </tr>\n    <tr>\n      <td id=\"T_2fea0_row24_col0\" class=\"data row24 col0\" >2022-04-21</td>\n      <td id=\"T_2fea0_row24_col1\" class=\"data row24 col1\" >10:30</td>\n      <td id=\"T_2fea0_row24_col2\" class=\"data row24 col2\" >143.5</td>\n      <td id=\"T_2fea0_row24_col3\" class=\"data row24 col3\" >-9.5</td>\n    </tr>\n  </tbody>\n</table>\n\n```\n:::\n:::\n\n\n<br>\n\nWe will take advantage of the consistent file naming on the server to extract the data of interest programatically. We will first need to copy the OPeNDAP data link for one of the files within the correct model and aggregation folders and then replace the date. \n\nSelecting a random date within the daily aggregated data (`daily-daily`; one data file per day) for the 1km hydro model (`gbr1_2.0`), we see the files have the naming format:\n\n`https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr1_2.0/daily-daily/EREEFS_AIMS-CSIRO_gbr1_2.0_hydro_daily-daily-`[YYYY-MM-DD]{style=\"color: red\"}`.nc`\n\nWe will now write a script which extracts the data for the dates and coordinates in @tbl-detections. For each unique date we will open the corresponding file on the server and extract the daily mean temperature, salinity, northward and southward current velocities for each set of coordinates corresponding to the date.\n\n\n::: {.cell}\n\n```{.python .cell-code .code-overflow-wrap}\n# GET DATA FOR EACH DATE AND COORDINATE (LAT LON) PAIR\nt_start = datetime.now() # to track run time of extraction\n\n## 1. Setup variables for data extraction\n# Server file name = <file_prefix><date (yyyy-mm-dd)><file_suffix>\nfile_prefix = \"https://thredds.ereefs.aims.gov.au/thredds/dodsC/s3://aims-ereefs-public-prod/derived/ncaggregate/ereefs/gbr1_2.0/daily-daily/EREEFS_AIMS-CSIRO_gbr1_2.0_hydro_daily-daily-\"\nfile_suffix = \".nc\"\n\n# Table of dates and coordinates for which to extract data (dates as character string)\ndetections = data[['date', 'longitude', 'latitude']].drop_duplicates()\n\nextracted_data = pd.DataFrame() # to save the extracted data\ndates = detections['date'].unique() # unique dates for which to open server files\n\n## 2. For each date of interest, open a connection to the corresponding data file on the server\nfor i in range(len(dates)):\n  \n  # Open file\n  file_name_i = file_prefix + dates[i] + file_suffix\n  server_file_i = Dataset(file_name_i)\n\n  # Coordinates for which to extract data for the current date\n  coordinates_i = detections.query(\"date == @date_i\")\n\n  # Get all coordinates in the open file (each representing the center-point of the corresponding grid cell)\n  server_lons_i = server_file_i.variables['longitude'][:]\n  server_lats_i = server_file_i.variables['latitude'][:]\n\n  ## 3. For each coordinate (lon, lat) for the current date, get the data for the closest grid cell (1km^2) from the open server file\n  for row_j in coordinates_i.itertuples():\n    \n    # Current coordinate of interest\n    lon_j = row_j.longitude\n    lat_j = row_j.latitutde\n        \n    # Find the index of the grid cell containing our coordinate of interest (i.e. the center-point closest to our point of interest)\n    lon_index_j = np.argmin(np.abs(server_lons_i - lon_j))\n    lat_index_j = np.argmin(np.abs(server_lats_i - lat_j))\n    # Note: This will return the closest grid cell, even for coordinates outside of the eReefs model boundary\n\n    # Setup the vector of dimension indices for which to extract data\n    dim_ind = [1, 16, lat_index_j, lon_index_j]\n    ######################################## \n    # Recall the order of the dimensions (time, k, latitude, longitude) from the previous tutorial. Therefore we want [time = 1 (as we're using the daily files this is the only option), k = 16 corresponding to a depth of 0.5m, lat_index_j, lon_index_j]. If you are still confused, go back to the previous tutorial or have a look at the structure of one of the server files by uncommenting the following 5 lines of code:\n    # not_yet_run = True  # used so the following lines are only run once\n    # if not_yet_run: \n    #   print(server_file_i.dimensions)\n    #   print(server_file_i.variables)\n    #   not_yet_run = False\n    ########################################\n\n    # Get the data for the grid cell containing our point of interest\n    temp_j = server_file_i.variables['temp'][0, 15, lat_index_j, lon_index_j]\n    salt_j = server_file_i.variables['salt']dim_ind\n    u_j = server_file_i.variables['u']dim_ind\n    v_j = server_file_i.variables['v']dim_ind\n\n    extracted_data_j = pd.DataFrame({\n      'date_i': date_i,\n      'lon_j': lon_j,\n      'lat_j': lat_j,\n      'temp_j': temp_j,\n      'salt_j': salt_j,\n      'u_j': u_j,\n      'v_j': v_j\n    })\n\n    ## 4. Save data in memory and repeat for next date-coordinate pair\n    extracted_data <- rbind(extracted_data, extracted_data_j)\n  }\n  # Close connection to open server file and move to the next date\n  server_file_i.close()\n}\n\n# Calculate the run time of the extraction\nt_stop <- Sys.time()\nextract_time <- t_stop - t_start\n\n# Rename the extracted data columns\ncolnames(extracted_data) <- c(\"date\", \"lon\", \"lat\", \"temp\", \"salt\", \"u\", \"v\")\n```\n:::\n\n\n:::{.callout-caution appearance=\"simple\"}\nIn the code above we match the closest eReefs model grid cell to each point in our list of coordinates (i.e. for each tracking detection). This will therefore match grid cells to all the coordinates, even if they are not within the eReefs model boundary. This behaviour may be useful when we have points right along the coastline as the eReefs models have small gaps at many points along the coast (see image below). However, in other cases this behaviour may not be desirable. For example, if we had points down near Sydney they would be matched to the closest eReefs grid cells (somewhere up near Brisbane) and the extracted data would be erroneous.\n\n[![](images/ereefs_model_boundary_and_grid_cells.jpeg)](images/ereefs_model_boundary_and_grid_cells.jpeg)\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Minimize the number of files opened \n# Check if points are in the eReefs model scope\n# Check if multiple points in signle model grid cell\n# \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nOur extracted data is shown below in @tbl-extracted-data. To get this data we openned `r length(dates)` files on the server (corresponding to unique dates in @tbl-detections) and extracted data for `r nrow(detections)` unique date-coordinate pairs. On our machine this took `r paste(round(as.numeric(extract_time), 1), units(extract_time))` to run.\n```\n:::\n\n::: {#tbl-extracted-data .cell tbl-cap='Extracted daily mean temperature, salinity, and east- and northward current velocities (u, v respectively) for Loggerhead Sea Turtle detections (Strydom, 2022)'}\n\n```{.r .cell-code}\n# Print the extracted data\nextracted_data |> kable() |> kable_styling() |> scroll_box(height = \"300px\", fixed_thead = TRUE)\n```\n:::\n\n\n\n## Matching extracted data to tracking data\n\nWe will match up the eReefs data with our tracking detections by combining the two datasets based on common date, longitude and latitude values.\n\n\n::: {#tbl-combined-data .cell tbl-cap='Loggerhead Sea Turtle tracking detections (Strydom, 2022) and corresponding eReefs daily mean temperature, salinity, east- and northward current velocities (u, v respectively).'}\n\n```{.r .cell-code}\n# Ensure common variables date, lon and lat between the two datasets\nextracted_data <- extracted_data |> \n  rename(longitude = lon, latitude = lat)\nloggerhead_data <- loggerhead_data |> \n  mutate(date = as_date(date_time))\n\n# Merge the two datasets based on common date, lon and lat values\ncombined_data <- merge(\n  loggerhead_data, extracted_data, \n  by = c(\"date\", \"longitude\", \"latitude\")\n) |> select(-date)\n\n# Print the combined data\ncombined_data |> kable() |> kable_styling() |>  scroll_box(height = \"300px\", fixed_thead = TRUE)\n```\n:::\n\n\nHooray! We now have our combined dataset of the Loggerhead Sea Turtle tracking detections and the corresponding eReefs daily aggregated data (@tbl-combined-data).\n\n\n\n\n<br><br><br><br><br><br><br><br><br><br><br>Strydom A. 2022. Wreck Rock Turtle Care - satellite tracking. Data downloaded from [OBIS-SEAMAP](http://seamap.env.duke.edu/dataset/2178); originated from [Satellite Tracking and Analysis Tool (STAT)](http://www.seaturtle.org/tracking/index.shtml?project_id=1381). [DOI: 10.15468/k4s6ap](https://doi.org/10.15468/k4s6ap) accessed via [GBIF.org](https://www.gbif.org/) on 2023-02-17.",
    "supporting": [
      "programmatic_server_access_python_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}